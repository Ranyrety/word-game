{"version":3,"sources":["WordDisplay.jsx","Letter.jsx","Game.jsx","Menu.jsx","Modal.jsx","MainMenu.jsx","ImageDisplay.jsx","App.jsx","serviceWorker.js","index.js"],"names":["WordDisplay","react_default","a","createElement","this","props","word","React","Component","Letter","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","correctClicked","incorrectClicked","bgColor","style","width","height","backgroundColor","color","fontSize","fontWeight","textAlign","lineHeight","verticalAlign","padding","display","margin","border","borderRadius","id","onClick","onClicked","letter","nextProps","prevState","Game","loading","correctGuessedLetter","gameData","correctAudio","Audio","wrongAudio","bind","assertThisInitialized","setState","e","target","letterIndex","letters","findIndex","l","character","innerText","pause","currentTime","play","length","onPuzzleCompleted","_this2","src_WordDisplay","map","o","src_Letter","key","puzzle","running","Menu","started","onPause","onNewGame","onRestart","Modal","show","position","top","left","background","transform","children","handleClose","MainMenu","handleClick","onSetDifficulty","src_Modal","difficultyVisible","showChoseDifficulty","ImageDisplay","src","url","App","currentLevel","difficulty","puzzlesURL","gameState","showModal","showDiffSetting","onNewGameClick","onPauseClick","onRestartClick","hideModal","showDifficulty","hideDifficulty","puzzleCompletedCallback","loadNextPuzzle","setDifficulty","diffLvl","console","error","concat","fetch","then","response","json","_this3","_this4","src_Menu","src_ImageDisplay","src_Game","src_MainMenu","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f2ada117.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass WordDisplay extends React.Component {\r\n   \r\n    render() {\r\n\r\n        return (\r\n            <div>{this.props.word}</div>\r\n        )\r\n    }\r\n}\r\nexport default WordDisplay","import React from 'react'\r\n\r\nclass Letter extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            correctClicked: false,\r\n            incorrectClicked: false\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (prevState.correctClicked)\r\n            return null\r\n        else\r\n            if (nextProps.correctClicked !== prevState.correctClicked || nextProps.incorrectClicked !== prevState.incorrectClicked) {\r\n                return { correctClicked: nextProps.correctClicked, incorrectClicked: nextProps.incorrectClicked }\r\n            }\r\n        return null\r\n    }\r\n\r\n\r\n    render() {\r\n        let bgColor = \"#095567\" \r\n        if (this.state.incorrectClicked) {\r\n            bgColor = \"#771010\"\r\n        }\r\n        else if (this.state.correctClicked) {\r\n            bgColor = \"#395501\"\r\n        }\r\n        let style = {\r\n            width: \"200px\",\r\n            height: \"200px\",\r\n            backgroundColor: bgColor,\r\n            color: \"#ffffff\",\r\n            fontSize: 80,\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            lineHeight: \"200px\",\r\n            verticalAlign: \"middle\",\r\n            padding: 10,\r\n            display: \"inline-block\",\r\n            margin: 15,\r\n            border: 1,\r\n            borderRadius: \"200px\"\r\n        };\r\n\r\n        return (\r\n            <div id={this.props.id} style={style} onClick={this.props.onClicked}>{this.props.letter}</div>\r\n        );\r\n    }\r\n}\r\nexport default Letter","import React from 'react'\r\nimport WordDisplay from './WordDisplay'\r\nimport Letter from './Letter'\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            correctGuessedLetter: 0,\r\n            gameData: {}\r\n        }\r\n\r\n        this.correctAudio = new Audio(\"clickSound.wav\")\r\n        this.wrongAudio = new Audio(\"wrongClick.wav\")\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if(nextProps.puzzle != prevState.gameData)\r\n        {\r\n            return {correctGuessedLetter:0, gameData: nextProps.puzzle, loading: nextProps.running}\r\n        }\r\n        if(nextProps.running != prevState.loading)\r\n            return {loading: nextProps.running}\r\n        return null\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(typeof this.state.gameData.word !== 'undefined' )\r\n            this.setState({loading: true})\r\n    }\r\n\r\n    onClick(e) {\r\n        const target = e.target;\r\n        let letterIndex = this.state.gameData.letters.findIndex(l => { return l.character === target.innerText })\r\n        if (!this.state.gameData.letters[letterIndex].correctClicked) {\r\n            if (target.innerText === this.state.gameData.word[this.state.correctGuessedLetter]) {\r\n                this.setState(prevState => {\r\n                    if (prevState.gameData.letters[letterIndex].incorrectClicked) {\r\n                        prevState.gameData.letters[letterIndex].incorrectClicked = false;\r\n                    }\r\n                    prevState.gameData.letters[letterIndex].correctClicked = true\r\n                    prevState.correctGuessedLetter += 1\r\n                    return prevState\r\n                }\r\n                )\r\n                this.correctAudio.pause();\r\n                this.correctAudio.currentTime = 0;\r\n                this.correctAudio.play()\r\n            }\r\n            else if (target.innerText !== this.state.gameData.word[this.state.correctGuessedLetter]) {\r\n                this.setState(prevState => {\r\n                    prevState.gameData.letters[letterIndex].incorrectClicked = true\r\n                    return prevState\r\n                })\r\n                this.wrongAudio.pause();\r\n                this.wrongAudio.currentTime = 0;\r\n                this.wrongAudio.play()\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(!this.state.loading){\r\n        if (this.state.correctGuessedLetter === this.state.gameData.word.length) {\r\n            this.setState({correctGuessedLetter: 0})\r\n            this.props.onPuzzleCompleted()\r\n        }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.loading ? <h1>loading</h1> :\r\n                <div> \r\n                    <WordDisplay word={this.state.gameData.word} />\r\n                    {\r\n                        this.state.gameData.letters.map((o, id) =>\r\n                            <Letter key={id} id={o.id} letter={o.character} onClicked={this.onClick}\r\n                                correctClicked={o.correctClicked} incorrectClicked={o.incorrectClicked} />\r\n                        )\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass Menu extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state = {\r\n            started: false\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if(prevState.started !== nextProps.running)\r\n        {\r\n            return {started: nextProps.running}\r\n        }\r\n        return null\r\n    }\r\n\r\n    render(props)\r\n    {\r\n        let style={\r\n            display: \"block\",\r\n            backgroundColor: \"#124650\",\r\n            border: 1\r\n        }\r\n\r\n        return(\r\n        <ul style={style}>\r\n            <li>\r\n            {\r\n                this.state.started ?\r\n            <button onClick={this.props.onPause}>Pause</button>\r\n            :\r\n            <button onClick={this.props.onNewGame}>New Game</button>\r\n            }\r\n            </li>\r\n            <li>\r\n                <button onClick={this.props.onRestart}>Restart</button>\r\n            </li>\r\n        </ul>\r\n        )\r\n    }\r\n}\r\nexport default Menu","import React from 'react'\r\n\r\nclass Modal extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n\r\n    render(){\r\n        let modalVisible = {\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100 %\",\r\n            background: \"rgba(0, 0, 0, 0.6)\",\r\n            display: \"block\"\r\n        }\r\n\r\n        let modalHidden = {\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            background: \"rgba(0, 0, 0, 0.6)\",\r\n            display: \"none\"\r\n        }\r\n\r\n        let modalMain = {\r\n            position: \"fixed\",\r\n            background: \"white\",\r\n            width: \"80%\",\r\n            height: \"auto\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\"\r\n        }\r\n\r\n            return (\r\n                <div style={this.props.show ? modalVisible : modalHidden }>\r\n                    <section style={modalMain}>\r\n                        {this.props.children}\r\n                        <button onClick={this.props.handleClose}>close</button>\r\n                    </section>\r\n                </div>\r\n            )\r\n    }\r\n}\r\nexport default Modal","import React from 'react'\r\nimport Modal from './Modal';\r\n\r\nclass MainMenu extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n\r\n    handleClick(e)\r\n    {\r\n        const id = e.target.id\r\n        this.props.onSetDifficulty(id)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Modal show={this.props.difficultyVisible} handleClose={this.props.handleClose}>\r\n                    <button id='0' onClick={this.handleClick}>Easy</button>\r\n                    <button id='1' onClick={this.handleClick}>Medium</button>\r\n                    <button id='2' onClick={this.handleClick}>Hard</button>\r\n                </Modal>\r\n                <ul>\r\n                    <li>\r\n                        <button onClick={this.props.onNewGame}>New Game</button>\r\n                    </li>\r\n                    <li>\r\n                        <button onClick={this.props.showChoseDifficulty}>Difficulty settings</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default MainMenu\r\n","import React from 'react'\r\n\r\n\r\nfunction ImageDisplay(props){\r\n    return(\r\n        <div>\r\n            <img src={props.url}></img>\r\n        </div>\r\n    )\r\n}\r\nexport default ImageDisplay","import React from 'react';\nimport Game from './Game'\nimport Menu from './Menu'\nimport MainMenu from  './MainMenu'\nimport ImageDisplay from './ImageDisplay'\nimport Modal from './Modal'\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n  \n    this.state = {\n      loading: true,\n      currentLevel: 0,\n      difficulty: 0,\n      puzzlesURL: ['/assets/data/gameData.json', '/assets/data/gameData02.json', '/assets/data/gameData03.json'],\n      gameState: {\n        running: false,\n      },\n      gameData: {},\n      showModal: false,\n      showDiffSetting: false\n    }\n\n    this.onNewGameClick = this.onNewGameClick.bind(this)\n    this.onPauseClick = this.onPauseClick.bind(this)\n    this.onRestartClick = this.onRestartClick.bind(this)\n    this.showModal = this.showModal.bind(this)\n    this.hideModal = this.hideModal.bind(this)\n    this.showDifficulty = this.showDifficulty.bind(this)\n    this.hideDifficulty = this.hideDifficulty.bind(this)\n\n    this.puzzleCompletedCallback = () => {\n      this.loadNextPuzzle()\n    }\n\n    this.setDifficulty = (diffLvl) => {\n      console.error(`Difficulty is set to: ${diffLvl}. To bad we don't have data for different levels of difficulty.`)\n      this.setState({showDiffSetting: false})\n    }\n\n  }\n\n  showDifficulty(){\n    this.setState({showDiffSetting: true})\n  }\n\n  hideDifficulty(){\n    this.setState({showDiffSetting: false})\n  }\n  \n  showModal(){\n    this.setState({showModal: true})\n  }\n\n  hideModal(){\n    this.setState({showModal: false})\n  }\n\n  componentDidMount()\n  {\n  }\n\n  loadNextPuzzle(){\n    this.setState({loading: true})\n    fetch(this.state.puzzlesURL[this.state.currentLevel + 1]).then(response => response.json()).then(\n      json => this.setState((prevState) => {return { gameData: json, loading: false, currentLevel: prevState.currentLevel +1,gameState: { running: true } }})\n    )\n  }\n\n  onNewGameClick(e){\n    fetch(this.state.puzzlesURL[0]).then(response => response.json() ).then(\n      json => this.setState({gameData: json, loading: false, gameState:{running: true}})\n    ) \n  }\n\n  onRestartClick(e){\n    this.setState({ loading: true })\n    fetch(this.state.puzzlesURL[this.state.currentLevel]).then(response => response.json()).then(\n      json => this.setState({ gameData: json, loading: false,  gameState: { running: true }})\n    )\n  }\n\n  onPauseClick(e){\n    this.showModal()\n  }\n\n  render(){\n    return(\n\n      this.state.gameState.running ? \n        <div>\n        <div>\n          <Menu  running={this.state.gameState.running} onPause={this.onPauseClick}\n                                       onNewGame={this.onNewGameClick} onRestart={this.onRestartClick}/>\n        </div>\n        <ImageDisplay url=\"assets/images/dom.png\"/>\n        <div>\n          <Modal show={this.state.showModal} handleClose={this.hideModal}> <p>Game currently paused, but since we still don't have timer this doesn't mean anything.</p></Modal>\n          <Game puzzle={this.state.gameData}\n                         running={this.state.loading} onPuzzleCompleted={this.puzzleCompletedCallback}/>\n        </div>\n        </div>\n        :\n        <div>\n        <MainMenu onNewGame={this.onNewGameClick} difficultyVisible={this.state.showDiffSetting} \n                        onSetDifficulty={this.setDifficulty} showChoseDifficulty={this.showDifficulty} \n                        handleClose={this.hideDifficulty}/>\n        <Modal show={this.state.showModal} handleClose={this.hideModal}> <p>Data 1</p></Modal>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}